
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COLON COMMA DEF DIVIDE DPERIOD EQUAL EQUALS FOR HIGHER IF LACCOL LOWER LPAREN MINUS NAME NUMBER OR PLUS PRINT RACCOL RPAREN TIMES WHILE start : linstlinst : linst inst \n            | inst inst : IF LPAREN expression RPAREN LACCOL linst RACCOLinst : WHILE LPAREN expression RPAREN LACCOL linst RACCOLinst : FOR LPAREN inst expression COLON inst RPAREN LACCOL linst RACCOLparams :\n              | NAME\n              | params COMMA NAMEinst : DEF NAME LPAREN params RPAREN DPERIOD linst COLONinst : NAME EQUAL expression COLONinst : PRINT LPAREN expression RPAREN COLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression EQUALS expression\n                  | expression LOWER expression\n                  | expression HIGHER expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'IF':([0,2,3,10,13,41,44,54,55,58,59,60,62,64,65,67,68,69,70,71,],[4,4,-3,-2,4,-11,4,4,4,-12,4,4,4,-4,-5,4,4,-10,4,-6,]),'WHILE':([0,2,3,10,13,41,44,54,55,58,59,60,62,64,65,67,68,69,70,71,],[5,5,-3,-2,5,-11,5,5,5,-12,5,5,5,-4,-5,5,5,-10,5,-6,]),'FOR':([0,2,3,10,13,41,44,54,55,58,59,60,62,64,65,67,68,69,70,71,],[6,6,-3,-2,6,-11,6,6,6,-12,6,6,6,-4,-5,6,6,-10,6,-6,]),'DEF':([0,2,3,10,13,41,44,54,55,58,59,60,62,64,65,67,68,69,70,71,],[7,7,-3,-2,7,-11,7,7,7,-12,7,7,7,-4,-5,7,7,-10,7,-6,]),'NAME':([0,2,3,7,10,11,12,13,15,16,17,22,23,28,29,30,31,32,33,34,35,36,41,44,54,55,57,58,59,60,62,64,65,67,68,69,70,71,],[8,8,-3,14,-2,20,20,8,20,20,20,20,39,20,20,20,20,20,20,20,20,20,-11,8,8,8,63,-12,8,8,8,-4,-5,8,8,-10,8,-6,]),'PRINT':([0,2,3,10,13,41,44,54,55,58,59,60,62,64,65,67,68,69,70,71,],[9,9,-3,-2,9,-11,9,9,9,-12,9,9,9,-4,-5,9,9,-10,9,-6,]),'$end':([1,2,3,10,41,58,64,65,69,71,],[0,-1,-3,-2,-11,-12,-4,-5,-10,-6,]),'RACCOL':([3,10,41,58,59,60,64,65,69,70,71,],[-3,-2,-11,-12,64,65,-4,-5,-10,71,-6,]),'COLON':([3,10,19,20,24,38,41,42,43,45,46,47,48,49,50,51,52,53,58,64,65,67,69,71,],[-3,-2,-23,-24,41,55,-11,58,-22,-13,-14,-15,-16,-17,-18,-19,-20,-21,-12,-4,-5,69,-10,-6,]),'LPAREN':([4,5,6,9,11,12,14,15,16,17,22,28,29,30,31,32,33,34,35,36,41,58,64,65,69,71,],[11,12,13,16,17,17,23,17,17,17,17,17,17,17,17,17,17,17,17,17,-11,-12,-4,-5,-10,-6,]),'EQUAL':([8,],[15,]),'NUMBER':([11,12,15,16,17,22,28,29,30,31,32,33,34,35,36,41,58,64,65,69,71,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-11,-12,-4,-5,-10,-6,]),'RPAREN':([18,19,20,21,23,25,26,39,40,41,43,45,46,47,48,49,50,51,52,53,58,61,63,64,65,69,71,],[27,-23,-24,37,-7,42,43,-8,56,-11,-22,-13,-14,-15,-16,-17,-18,-19,-20,-21,-12,66,-9,-4,-5,-10,-6,]),'PLUS':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[28,-23,-24,28,28,28,28,28,-22,28,28,28,28,28,28,28,28,28,]),'MINUS':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[29,-23,-24,29,29,29,29,29,-22,29,29,29,29,29,29,29,29,29,]),'TIMES':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[30,-23,-24,30,30,30,30,30,-22,30,30,30,30,30,30,30,30,30,]),'OR':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[31,-23,-24,31,31,31,31,31,-22,31,31,31,31,31,31,31,31,31,]),'AND':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[32,-23,-24,32,32,32,32,32,-22,32,32,32,32,32,32,32,32,32,]),'EQUALS':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[33,-23,-24,33,33,33,33,33,-22,33,33,33,33,33,33,33,33,33,]),'LOWER':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[34,-23,-24,34,34,34,34,34,-22,34,34,34,34,34,34,34,34,34,]),'HIGHER':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[35,-23,-24,35,35,35,35,35,-22,35,35,35,35,35,35,35,35,35,]),'DIVIDE':([18,19,20,21,24,25,26,38,43,45,46,47,48,49,50,51,52,53,],[36,-23,-24,36,36,36,36,36,-22,36,36,36,36,36,36,36,36,36,]),'COMMA':([23,39,40,63,],[-7,-8,57,-9,]),'LACCOL':([27,37,66,],[44,54,68,]),'DPERIOD':([56,],[62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'linst':([0,44,54,62,68,],[2,59,60,67,70,]),'inst':([0,2,13,44,54,55,59,60,62,67,68,70,],[3,10,22,3,3,61,10,10,3,10,3,10,]),'expression':([11,12,15,16,17,22,28,29,30,31,32,33,34,35,36,],[18,21,24,25,26,38,45,46,47,48,49,50,51,52,53,]),'params':([23,],[40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> linst','start',1,'p_start','main.py',77),
  ('linst -> linst inst','linst',2,'p_line','main.py',126),
  ('linst -> inst','linst',1,'p_line','main.py',127),
  ('inst -> IF LPAREN expression RPAREN LACCOL linst RACCOL','inst',7,'p_if','main.py',134),
  ('inst -> WHILE LPAREN expression RPAREN LACCOL linst RACCOL','inst',7,'p_while','main.py',138),
  ('inst -> FOR LPAREN inst expression COLON inst RPAREN LACCOL linst RACCOL','inst',10,'p_for','main.py',142),
  ('params -> <empty>','params',0,'p_params','main.py',145),
  ('params -> NAME','params',1,'p_params','main.py',146),
  ('params -> params COMMA NAME','params',3,'p_params','main.py',147),
  ('inst -> DEF NAME LPAREN params RPAREN DPERIOD linst COLON','inst',8,'p_void','main.py',156),
  ('inst -> NAME EQUAL expression COLON','inst',4,'p_statement_assign','main.py',160),
  ('inst -> PRINT LPAREN expression RPAREN COLON','inst',5,'p_statement_print','main.py',165),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',170),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',171),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',172),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','main.py',173),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','main.py',174),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','main.py',175),
  ('expression -> expression LOWER expression','expression',3,'p_expression_binop','main.py',176),
  ('expression -> expression HIGHER expression','expression',3,'p_expression_binop','main.py',177),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',178),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',183),
  ('expression -> NUMBER','expression',1,'p_expression_number','main.py',188),
  ('expression -> NAME','expression',1,'p_expression_name','main.py',194),
]
